# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# Gaps
gaps inner 60
gaps outer 30

set $bar-height  25
set $border-width 0

default_border none

set $font-size 14
font pango:System San Francisco Display,  FontAwesome5Free, FontAwesome5Brands $font-size

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1

# Quit Window
bindsym $mod+q kill
bindsym $mod+F4 kill

# Simple Zoom
bindsym $mod+9 gaps inner all plus 30, gaps outer all plus 10
bindsym $mod+0 gaps inner all minus 30, gaps outer all minus 10

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wofi --show drun -i | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
#output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output DP-2 mode 2560x1440@165.080Hz position 0,0
output DP-1 mode 2560x1440@164.835Hz position 2560,0


### Idle configuration
exec swayidle -w \
  timeout 600 'swaymsg "output * dpms off"' \
  resume 'swaymsg "output * dpms on"'

#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#          resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#

    bindsym --release $mod+space exec --no-startup-id "music --playpause"

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    bindsym $mod+p exec screenshot

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+r exec $menu
    bindsym $mod+b exec $menu
    bindsym $mod+slash exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    #bindsym $mod+9 workspace number 9

    # Fake Show Desktop
    bindsym $mod+c workspace number 10

    workspace 1 output DP-2
    workspace 2 output DP-2
    workspace 3 output DP-2
    workspace 4 output DP-2
    workspace 5 output DP-2
    workspace 6 output DP-1
    workspace 7 output DP-1
    workspace 8 output DP-1
    workspace 9 output DP-1
    workspace 10 output DP-2

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8

    bindsym $mod+Tab workspace next
    bindsym $mod+grave workspace prev
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    # bindsym $mod+a layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle


    bindsym $mod+a focus parent

    bindsym $mod+n exec thunar
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

   # Log Out
   bindsym $mod+semicolon exec swaymsg exit

   # Toggle i3bar
   bindsym --release $mod+o bar mode toggle

# Force Windows Onto Specific Workspaces
assign [app_id="firefox"] number 1
assign [class="Chromium"] number 1
assign [class="Google-chrome"] number 1
assign [app_id="Emacs"] number 2
assign [app_id="Alacritty"] number 3
assign [app_id="thunar"] number 4
assign [app_id="org.pwmt.zathura"] number 6
assign [class="discord"] number 7
assign [class="(?i)Spotify"] number 8
for_window [class="Spotify"] move to workspace number 8
assign [app_id="rhythmbox"] number 8

#
# Resizing containers:
#

# Reisze Mode
set $mode_resize Resize
bindsym $mod+Shift+r mode "$mode_resize"
mode "$mode_resize" {
    set $small 10
    bindsym $left	resize shrink width $small px or $small ppt
    bindsym $right	resize grow width $small px or $small ppt
    bindsym $down	resize grow height $small px or $small ppt
    bindsym $up		resize shrink height $small px or $small ppt

    set $large 20
    bindsym Left	resize shrink width $large px or $large ppt
    bindsym Down	resize grow height $large px or $large ppt
    bindsym Up		resize shrink height $large px or $large ppt
    bindsym Right	resize grow width $large px or $large ppt

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym Control+g mode "default"
    bindsym q mode "default"
}

set $bg-color			 #2f343f
set $inactive-bg-color	 #2f343f
set $text-color			 #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color	 #E53935
set $urgent-text-color	 #313742
set $indicator           #00FF00
set $separator           #757575

# Window Colors			Border				Background			Text				 Indicator
client.focused			$bg-color			$bg-color			$text-color			 $indicator
client.unfocused		$inactive-bg-color	$inactive-bg-color	$inactive-text-color $indicator
client.focused_inactive $inactive-bg-color	$inactive-bg-color	$inactive-text-color $indicator
client.urgent			$urgent-bg-color	$urgent-bg-color	$text-color			 $indicator


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom
    pango_markup enabled

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while ~/.config/sway/sway-bar.sh; do sleep 1; done

	colors {
		background $bg-color
		separator $separator

		# Workspace Colors   Border			    Background		     Text
		focused_workspace    $bg-color		    $bg-color			 $text-color
		inactive_workspace   $inactive-bg-color $inactive-bg-color   $inactive-text-color
		urgent_workspace     $urgent-bg-color   $urgent-bg-color	 $text-color
	}
}


hide_edge_borders both

include @sysconfdir@/sway/config.d/*

output * bg $HOME/Pictures/bg.jpg fill
